// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: pb/mysqlPB/mysql.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 数据库连接请求消息
type ConnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`         // 数据库主机
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`        // 数据库端口
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`         // 数据库用户名
	Password      string                 `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"` // 数据库密码
	Database      string                 `protobuf:"bytes,5,opt,name=database,proto3" json:"database,omitempty"` // 数据库名称
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_pb_mysqlPB_mysql_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ConnectRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ConnectRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ConnectRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *ConnectRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

// 数据库连接响应消息
type ConnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 连接是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 连接结果消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectResponse) Reset() {
	*x = ConnectResponse{}
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectResponse) ProtoMessage() {}

func (x *ConnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectResponse.ProtoReflect.Descriptor instead.
func (*ConnectResponse) Descriptor() ([]byte, []int) {
	return file_pb_mysqlPB_mysql_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConnectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 数据库断开连接请求消息
type DisconnectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"` // 连接 ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectRequest) Reset() {
	*x = DisconnectRequest{}
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectRequest) ProtoMessage() {}

func (x *DisconnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectRequest.ProtoReflect.Descriptor instead.
func (*DisconnectRequest) Descriptor() ([]byte, []int) {
	return file_pb_mysqlPB_mysql_proto_rawDescGZIP(), []int{2}
}

func (x *DisconnectRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

// 数据库断开连接响应消息
type DisconnectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 断开连接是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 断开连接结果消息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisconnectResponse) Reset() {
	*x = DisconnectResponse{}
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisconnectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisconnectResponse) ProtoMessage() {}

func (x *DisconnectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisconnectResponse.ProtoReflect.Descriptor instead.
func (*DisconnectResponse) Descriptor() ([]byte, []int) {
	return file_pb_mysqlPB_mysql_proto_rawDescGZIP(), []int{3}
}

func (x *DisconnectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DisconnectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 执行查询请求消息
type ExecuteQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ConnectionId  string                 `protobuf:"bytes,1,opt,name=connection_id,json=connectionId,proto3" json:"connection_id,omitempty"` // 连接 ID
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`                                   // 要执行的 SQL 查询
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryRequest) Reset() {
	*x = ExecuteQueryRequest{}
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryRequest) ProtoMessage() {}

func (x *ExecuteQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryRequest.ProtoReflect.Descriptor instead.
func (*ExecuteQueryRequest) Descriptor() ([]byte, []int) {
	return file_pb_mysqlPB_mysql_proto_rawDescGZIP(), []int{4}
}

func (x *ExecuteQueryRequest) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

func (x *ExecuteQueryRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// 执行查询响应消息
type ExecuteQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 查询是否成功
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`  // 查询结果消息
	Results       []string               `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`  // 查询结果，假设为字符串数组
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteQueryResponse) Reset() {
	*x = ExecuteQueryResponse{}
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteQueryResponse) ProtoMessage() {}

func (x *ExecuteQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pb_mysqlPB_mysql_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteQueryResponse.ProtoReflect.Descriptor instead.
func (*ExecuteQueryResponse) Descriptor() ([]byte, []int) {
	return file_pb_mysqlPB_mysql_proto_rawDescGZIP(), []int{5}
}

func (x *ExecuteQueryResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ExecuteQueryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExecuteQueryResponse) GetResults() []string {
	if x != nil {
		return x.Results
	}
	return nil
}

var File_pb_mysqlPB_mysql_proto protoreflect.FileDescriptor

const file_pb_mysqlPB_mysql_proto_rawDesc = "" +
	"\n" +
	"\x16pb/mysqlPB/mysql.proto\x12\amysqlPB\"\x84\x01\n" +
	"\x0eConnectRequest\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x1a\n" +
	"\bpassword\x18\x04 \x01(\tR\bpassword\x12\x1a\n" +
	"\bdatabase\x18\x05 \x01(\tR\bdatabase\"E\n" +
	"\x0fConnectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"8\n" +
	"\x11DisconnectRequest\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\"H\n" +
	"\x12DisconnectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"P\n" +
	"\x13ExecuteQueryRequest\x12#\n" +
	"\rconnection_id\x18\x01 \x01(\tR\fconnectionId\x12\x14\n" +
	"\x05query\x18\x02 \x01(\tR\x05query\"d\n" +
	"\x14ExecuteQueryResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x18\n" +
	"\aresults\x18\x03 \x03(\tR\aresults2\xe0\x01\n" +
	"\fMySQLService\x12<\n" +
	"\aConnect\x12\x17.mysqlPB.ConnectRequest\x1a\x18.mysqlPB.ConnectResponse\x12E\n" +
	"\n" +
	"Disconnect\x12\x1a.mysqlPB.DisconnectRequest\x1a\x1b.mysqlPB.DisconnectResponse\x12K\n" +
	"\fExecuteQuery\x12\x1c.mysqlPB.ExecuteQueryRequest\x1a\x1d.mysqlPB.ExecuteQueryResponseB\x04Z\x02./b\x06proto3"

var (
	file_pb_mysqlPB_mysql_proto_rawDescOnce sync.Once
	file_pb_mysqlPB_mysql_proto_rawDescData []byte
)

func file_pb_mysqlPB_mysql_proto_rawDescGZIP() []byte {
	file_pb_mysqlPB_mysql_proto_rawDescOnce.Do(func() {
		file_pb_mysqlPB_mysql_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pb_mysqlPB_mysql_proto_rawDesc), len(file_pb_mysqlPB_mysql_proto_rawDesc)))
	})
	return file_pb_mysqlPB_mysql_proto_rawDescData
}

var file_pb_mysqlPB_mysql_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pb_mysqlPB_mysql_proto_goTypes = []any{
	(*ConnectRequest)(nil),       // 0: mysqlPB.ConnectRequest
	(*ConnectResponse)(nil),      // 1: mysqlPB.ConnectResponse
	(*DisconnectRequest)(nil),    // 2: mysqlPB.DisconnectRequest
	(*DisconnectResponse)(nil),   // 3: mysqlPB.DisconnectResponse
	(*ExecuteQueryRequest)(nil),  // 4: mysqlPB.ExecuteQueryRequest
	(*ExecuteQueryResponse)(nil), // 5: mysqlPB.ExecuteQueryResponse
}
var file_pb_mysqlPB_mysql_proto_depIdxs = []int32{
	0, // 0: mysqlPB.MySQLService.Connect:input_type -> mysqlPB.ConnectRequest
	2, // 1: mysqlPB.MySQLService.Disconnect:input_type -> mysqlPB.DisconnectRequest
	4, // 2: mysqlPB.MySQLService.ExecuteQuery:input_type -> mysqlPB.ExecuteQueryRequest
	1, // 3: mysqlPB.MySQLService.Connect:output_type -> mysqlPB.ConnectResponse
	3, // 4: mysqlPB.MySQLService.Disconnect:output_type -> mysqlPB.DisconnectResponse
	5, // 5: mysqlPB.MySQLService.ExecuteQuery:output_type -> mysqlPB.ExecuteQueryResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pb_mysqlPB_mysql_proto_init() }
func file_pb_mysqlPB_mysql_proto_init() {
	if File_pb_mysqlPB_mysql_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pb_mysqlPB_mysql_proto_rawDesc), len(file_pb_mysqlPB_mysql_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pb_mysqlPB_mysql_proto_goTypes,
		DependencyIndexes: file_pb_mysqlPB_mysql_proto_depIdxs,
		MessageInfos:      file_pb_mysqlPB_mysql_proto_msgTypes,
	}.Build()
	File_pb_mysqlPB_mysql_proto = out.File
	file_pb_mysqlPB_mysql_proto_goTypes = nil
	file_pb_mysqlPB_mysql_proto_depIdxs = nil
}
